CREATE TABLE CEG (
  CegID NUMBER PRIMARY KEY NOT NULL,
  CegNev VARCHAR2(100) NOT NULL,
  AlkalmazottakSzama NUMBER 
);

CREATE TABLE HIRDETO (
  FelhasznaloID NUMBER PRIMARY KEY NOT NULL,
  Nev VARCHAR2(50),
  Email VARCHAR2(50),
  Jelszo VARCHAR2(50),
  HirdetoID NUMBER NOT NULL,
  CegID NUMBER NOT NULL,
  FOREIGN KEY (CegID) REFERENCES CEG(CegID)
);

CREATE TABLE KERESO (
    FelhasznaloID NUMBER PRIMARY KEY NOT NULL,
  Nev VARCHAR2(100) NOT NULL,
  Email VARCHAR2(100) NOT NULL,
  Jelszo VARCHAR2(50),
  CV BLOB,
  Nyelvtudas VARCHAR2(100),
  SzuletesiIdo DATE,
  Vegzettseg VARCHAR2(100) NOT NULL
);



CREATE TABLE KATEGORIA (
  KategoriaID NUMBER PRIMARY KEY NOT NULL,
  Megnevezes VARCHAR2(100) NOT NULL,
  AllasokSzama NUMBER NOT NULL
);



CREATE TABLE MUNKA (
  MunkaID NUMBER PRIMARY KEY NOT NULL,
  Megnevezes VARCHAR2(100) NOT NULL,
  SzuksegesNyelvtudas VARCHAR2(100) NOT NULL,
  Oraber NUMBER NOT NULL,
  HirdetoID NUMBER,
  FOREIGN KEY (HirdetoID) REFERENCES HIRDETO(FelhasznaloID),
  KategoriaID NUMBER,
  FOREIGN KEY (KategoriaID) REFERENCES KATEGORIA(KategoriaID)
);



CREATE TABLE JELENTKEZETT (
    jelentkezettID NUMBER PRIMARY KEY  NOT NULL,
    datum DATE  NOT NULL,
    FelhasznaloID NUMBER NOT NULL, 
    FOREIGN KEY(FelhasznaloID) REFERENCES KERESO(FelhasznaloID),
    MunkaID NUMBER NOT NULL,
    FOREIGN KEY(MunkaID) REFERENCES MUNKA(MunkaID)
);

--2 FÜGGVÉNY:

CREATE OR REPLACE FUNCTION delete_jelentkezett(jelentkezettID_in IN NUMBER)
RETURN BOOLEAN
IS
BEGIN
  DELETE FROM JELENTKEZETT WHERE jelentkezettID = jelentkezettID_in;
  RETURN TRUE;
EXCEPTION
  WHEN NO_DATA_FOUND THEN
    RETURN FALSE;
END;

CREATE OR REPLACE FUNCTION delete_munka(munkaid_in IN NUMBER)
RETURN BOOLEAN
IS
BEGIN
  DELETE FROM MUNKA WHERE MUNKAID = munkaid_in;
  RETURN TRUE;
EXCEPTION
  WHEN NO_DATA_FOUND THEN
    RETURN FALSE;
END;

-- 2 TRIGGER:

CREATE TABLE HIRDETES_INSERT (
    InsertID NUMBER PRIMARY KEY,
    FelhasznaloID NUMBER NOT NULL,
    Megnevezes VARCHAR2(100) NOT NULL,
    Datum DATE NOT NULL
);

CREATE OR REPLACE TRIGGER munka_insert_trigger
AFTER INSERT ON MUNKA
FOR EACH ROW
DECLARE
BEGIN
    INSERT INTO HIRDETES_INSERT (FelhasznaloID, Megnevezes, Datum)
    VALUES (:new.HirdetoID, :new.Megnevezes, SYSDATE);
END;
/

CREATE TABLE JELENTKEZETT_INFO (
    jelentkezett_id NUMBER PRIMARY KEY NOT NULL,
    jelentkezes_datum DATE NOT NULL,
    kereso_nev VARCHAR2(100) NOT NULL,
    munka_cim VARCHAR2(100) NOT NULL
);

CREATE OR REPLACE TRIGGER jelentkezett_insert_trigger
AFTER INSERT ON JELENTKEZETT
FOR EACH ROW
DECLARE
    kereso_nev VARCHAR2(100);
    munka_cim VARCHAR2(100);
BEGIN
    -- Kereső nevének lekérdezése
    SELECT NEV INTO kereso_nev FROM KERESO WHERE FelhasznaloID = :NEW.FelhasznaloID;

    -- Munka címének lekérdezése
    SELECT MEGNEVEZES INTO munka_cim FROM MUNKA WHERE MunkaID = :NEW.MunkaID;

    -- Adatok beszúrása a JELENTKEZETT_INFO táblába
    INSERT INTO JELENTKEZETT_INFO (jelentkezett_id, jelentkezes_datum, kereso_nev, munka_cim)
    VALUES (:NEW.jelentkezettID, :NEW.datum, kereso_nev, munka_cim);
END;
/

Sequences:


   CREATE SEQUENCE  CEG_SEQ  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 43 CACHE 20 NOORDER  NOCYCLE  NOPARTITION ;


   CREATE SEQUENCE HIRDETO_SEQ MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 63 CACHE 20 NOORDER  NOCYCLE  NOPARTITION ;


   CREATE SEQUENCE  JELENTKEZETT_SEQ MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 74 CACHE 20 NOORDER  NOCYCLE  NOPARTITION ;


   CREATE SEQUENCE  KERESO_SEQ  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 79 CACHE 20 NOORDER  NOCYCLE  NOPARTITION ;


   CREATE SEQUENCE MUNKA_INSERT  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE  NOPARTITION ;


   CREATE SEQUENCE MUNKA_SEQ MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 64 CACHE 20 NOORDER  NOCYCLE  NOPARTITION ;






